# Module manifest for module 'WDACConfig'
# Generated by: HotCakeX
# Generated on: 4/2/2023

@{

    # Script module or binary module file associated with this manifest.
    # RootModule = ""

    # Version number of this module.
    ModuleVersion        = '0.1.5'

    # Supported PSEditions
    CompatiblePSEditions = @("Core")

    # ID used to uniquely identify this module
    GUID                 = '79920947-efb5-48c1-a567-5b02ebe74793'

    # Author of this module
    Author               = 'HotCakeX'

    # Company or vendor of this module
    CompanyName          = 'SpyNetGirl'

    # Copyright statement for this module
    Copyright            = '(c) 2023'

    # Description of the functionality provided by this module
    Description          = @"

This is an advanced PowerShell module for WDAC (Windows Defender Application Control) and automates a lot of tasks.


üü¢ Please see the GitHub page for Full details and everything about the module: https://github.com/HotCakeX/Harden-Windows-Security/wiki/WDACConfig


üõ°Ô∏è Here is the list of module's cmdlets

‚úîÔ∏è New-WDACConfig: https://github.com/HotCakeX/Harden-Windows-Security/wiki/New-WDACConfig

‚úîÔ∏è New-SupplementalWDACConfig: https://github.com/HotCakeX/Harden-Windows-Security/wiki/New-SupplementalWDACConfig

‚úîÔ∏è Remove-WDACConfig: https://github.com/HotCakeX/Harden-Windows-Security/wiki/Remove-WDACConfig

‚úîÔ∏è Edit-WDACConfig: https://github.com/HotCakeX/Harden-Windows-Security/wiki/Edit-WDACConfig

‚úîÔ∏è Edit-SignedWDACConfig: https://github.com/HotCakeX/Harden-Windows-Security/wiki/Edit-SignedWDACConfig

‚úîÔ∏è Deploy-SignedWDACConfig: https://github.com/HotCakeX/Harden-Windows-Security/wiki/Deploy-SignedWDACConfig

‚úîÔ∏è Confirm-WDACConfig: https://github.com/HotCakeX/Harden-Windows-Security/wiki/Confirm-WDACConfig

‚úîÔ∏è New-DenyWDACConfig: https://github.com/HotCakeX/Harden-Windows-Security/wiki/New-DenyWDACConfig



To get help and syntax on PowerShell console, type:
"Get-Command -Module WDACConfig"
"Get-Help New-WDACConfig"
"Get-Help New-SupplementalWDACConfig"
"Get-Help Remove-WDACConfig"
"Get-Help Edit-WDACConfig"
"Get-Help Edit-SignedWDACConfig"
"Get-Help Deploy-SignedWDACConfig"
"Get-Help Confirm-WDACConfig"
"Get-Help New-DenyWDACConfig"
"@

    # Minimum version of the PowerShell engine required by this module
    PowerShellVersion    = '7.3.4'

    # Name of the PowerShell host required by this module
    # PowerShellHostName = ''

    # Minimum version of the PowerShell host required by this module
    # PowerShellHostVersion = ''

    # Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
    # DotNetFrameworkVersion = ''

    # Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
    # ClrVersion = ''

    # Processor architecture (None, X86, Amd64) required by this module
    # ProcessorArchitecture = ''

    # Modules that must be imported into the global environment prior to importing this module
    # RequiredModules = @()

    # Assemblies that must be loaded prior to importing this module
    # RequiredAssemblies = @()

    # Script files (.ps1) that are run in the caller's environment prior to importing this module.
    # ScriptsToProcess = @()

    # Type files (.ps1xml) to be loaded when importing this module
    # TypesToProcess = @()

    # Format files (.ps1xml) to be loaded when importing this module
    # FormatsToProcess = @()

    # Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
    NestedModules        = @("New-WDACConfig.psm1", "Remove-WDACConfig.psm1", "Deploy-SignedWDACConfig.psm1", "Confirm-WDACConfig.psm1", "Edit-WDACConfig.psm1", "Edit-SignedWDACConfig.psm1", "New-SupplementalWDACConfig.psm1", "New-DenyWDACConfig.psm1")

    # Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
    FunctionsToExport    = @("New-WDACConfig", "Remove-WDACConfig", "Deploy-SignedWDACConfig", "Confirm-WDACConfig", "Edit-WDACConfig", "Edit-SignedWDACConfig", "New-SupplementalWDACConfig", "New-DenyWDACConfig")

    # Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
    CmdletsToExport      = @("New-WDACConfig", "Remove-WDACConfig", "Deploy-SignedWDACConfig", "Confirm-WDACConfig", "Edit-WDACConfig", "Edit-SignedWDACConfig", "New-SupplementalWDACConfig", "New-DenyWDACConfig")

    # Variables to export from this module
    VariablesToExport    = '*'

    # Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
    AliasesToExport      = @()

    # DSC resources to export from this module
    # DscResourcesToExport = @()

    # List of all modules packaged with this module
    # ModuleList = @()

    # List of all files packaged with this module
    FileList             = @('WDACConfig.psd1', 'New-WDACConfig.psm1', 'Deploy-SignedWDACConfig.psm1', 'Remove-WDACConfig.psm1', "Confirm-WDACConfig.psm1", "Edit-WDACConfig.psm1", "Edit-SignedWDACConfig.psm1", "New-SupplementalWDACConfig.psm1", "Resources.ps1", "ArgumentCompleters.ps1", "New-DenyWDACConfig.psm1")

    # Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
    PrivateData          = @{

        PSData = @{

            # Tags applied to this module. These help with module discovery in online galleries.
            Tags         = @('WDAC', 'Windows-Defender-Application-Control', 'Windows', 'Security', 'Microsoft', 'Application-Control', 'MDAC', 'Application-Whitelisting')

            # A URL to the license for this module.
            LicenseUri   = 'https://github.com/HotCakeX/Harden-Windows-Security/blob/main/LICENSE'

            # A URL to the main website for this project.
            ProjectUri   = 'https://github.com/HotCakeX/Harden-Windows-Security/wiki/WDACConfig'

            # A URL to an icon representing this module.
            IconUri      = 'https://raw.githubusercontent.com/HotCakeX/Harden-Windows-Security/main/WDACConfig/icon.png'

            # ReleaseNotes of this module
            ReleaseNotes = @"

## Version 0.1.5
Added alias for many parameters for easier access.
Added new cmdlet: New-DenyWDACConfig for creating base policies with Deny rules. They can be deployed side by side other policies without conflict.
Added argument completer for many new parameters and improved the previous ones to be smarter in their suggestions.

## Version 0.1.4
Code optimization.
Implemented a check to make sure Windows 11 22H2 is being used as it's a requirement for this module to run.
Improved Remove-WDACConfig cmdlet by making the argument completers only show policies that haven't been already deleted, also applied a fix to this cmdlet for when multiple policies with the same name are deployed.   

## Version 0.1.3
Improved Remove-WDACConfig cmdlet so handle situations where multiple policies with the exact same name are deployed and user is trying to remove them.
Changed some of the parameter names in Remove-WDACConfig cmdlet to better reflect their jobs and how they are supposed to be used.
New cmdlet: New-SupplementalWDACConfig: dedicated to making all kinds of supplemental policies only - Removed the Supplemental parameter from New-WDACConfig cmdlet and instead the new cmdlet handles anything related to Supplemental policy creation/deployment.          
New-SupplementalWDACConfig cmdlet supports AppxPackages, FilePaths with one or more wildcard characters and of course the normal supplemental policy creation with granular levels and fallbacks and more.
Removed the Debugmode parameter from certain cmdlets and instead now detecting the usage of the default PowerShell -Debug switch and do debugging actions based on that.
The Edit-WDACConfig and Edit-SignedWDACConfig cmdlets now detect and create allow rules for kernel protected files.
New parameter for New-WDACConfig: -DeployLatestBlockRules, will deploy the latest Microsoft recommended block rules on the system, as a standalone base policy.
Implemented a feature to prevent users from accidentally attempting to remove Signed policies that aren't even deployed on the system.
Plus a LOT of code optimizations.

## Version 0.1.2
Made the Get-SignTool function more secure.
Added smarter argument completer to Remove-WDACConfig cmdlet.


Full Change log for previous versions are available on Excel online: (Copy and paste the link in your browser if it isn't clickable)
https://1drv.ms/x/s!AtCaUNAJbbvIhuVPpPeCHSjl75OqBQ?e=qgvzEt

"@

            # Prerelease string of this module
            # Prerelease = ''

            # Flag to indicate whether the module requires explicit user acceptance for install/update/save
            # RequireLicenseAcceptance = $false

            # External dependent modules of this module
            # ExternalModuleDependencies = @()

        } # End of PSData hashtable

    } # End of PrivateData hashtable

    # HelpInfo URI of this module
    HelpInfoURI          = 'https://github.com/HotCakeX/Harden-Windows-Security/wiki/WDACConfig'

    # Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
    # DefaultCommandPrefix = ''

}
